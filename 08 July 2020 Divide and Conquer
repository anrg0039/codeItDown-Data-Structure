//Binary Search 
#include <bits/stdc++.h>
using namespace std;
int binarysearch(vector<int> v,int st,int end,int k)
{
    if(st>end)
    {
        return -1;
    }
    int mid = (st+end)/2;

    if(v[mid]== k)
    {
        return mid;
    }

    if(v[mid]>k)
    {
        return binarysearch(v,st,mid-1,k);
    }
    return binarysearch(v,mid+1,end,k);
}
int main() {
    int n;
    cin>>n;
    vector<int> v;

    for(int i=0;i<n;i++)
    {
        int a;
        cin>>a;
        v.push_back(a);
    }
    int k;
    cin>>k;
    cout<<binarysearch(v,0,n-1,k);
}

//Quick Sort


#include <bits/stdc++.h>
using namespace std;
void print(vector<int> v)
{
    for(int i=0;i<v.size();i++)
    {
        cout<<v[i]<<" ";
    }
    cout<<"\n";
}
int partition(vector<int> &v,int st,int end)
{
    int p = v[end];
    int i = st;

    for(int j=st;j<end;j++)
    {
        if(v[j] < p)
        {
            swap(v[j],v[i]);
            i++;
        }
    }
    swap(v[i],v[end]);
    return i;
}
void quicksort(vector<int> &v,int st,int end)
{
    if(end>st)
    {
        int pi = partition(v,st,end);
        quicksort(v,st,pi-1);
        quicksort(v,pi+1,end);
    }
}
int main() {
    int n;
    cin>>n;
    vector<int> v;

    for(int i=0;i<n;i++)
    {
        int a;
        cin>>a;
        v.push_back(a);
    }
    print(v);
    quicksort(v,0,n-1);
    print(v);
}

