#include <iostream>
using namespace std;
#define N 16
void print(int board[N][N])
{
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            cout<<board[i][j]<<" ";
        }
        cout<<"\n";
    }
}
bool issafe(int board[N][N],int row,int col)
{
    int i,j;
    for(i=0;i<col;i++)
    {
        if(board[row][i]==1)
        {
            return false;
        }
    }
    for(i = row,j=col;i>=0&&j>=0;i--,j--)
    {
        if(board[i][j]==1)
        {
            return false;
        }
    }

    for(i=row,j=col;i<N&&j>=0;i++,j--)
    {
        if(board[i][j]==1)
        {
            return false;
        }

    }

    return true;

}
bool fillQueen(int board[N][N],int col)
{
    if(col>=N)
    {
        return true;
    }

    for(int i = 0;i<N;i++)
    {
        if(issafe(board,i,col))
        {
            board[i][col] = 1;

            if(fillQueen(board,col+1)== true)
            return true;

            board[i][col] = 0;
        }
    }
    return false;
}
int main() {

    int board[N][N];
    memset(board,0,sizeof(board));
    print(board);
    fillQueen(board,0);
    cout<<"-----------\n";
    print(board);
}
